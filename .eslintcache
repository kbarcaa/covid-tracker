[{"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/index.js":"1","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/App.js":"2","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/InfoBox.js":"3","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/Map.js":"4","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/Table.js":"5","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/js/util.js":"6","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/LineGraph.js":"7"},{"size":168,"mtime":1608223916420,"results":"8","hashOfConfig":"9"},{"size":5179,"mtime":1608390892562,"results":"10","hashOfConfig":"9"},{"size":697,"mtime":1608336828198,"results":"11","hashOfConfig":"9"},{"size":665,"mtime":1608329100741,"results":"12","hashOfConfig":"9"},{"size":351,"mtime":1608334881139,"results":"13","hashOfConfig":"9"},{"size":2303,"mtime":1608335429603,"results":"14","hashOfConfig":"9"},{"size":2375,"mtime":1608333043316,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1b3dg7l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/index.js",[],["33","34"],"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/App.js",["35"],"import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n} from '@material-ui/core';\n//components\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport LineGraph from './components/LineGraph';\n//util\nimport { prettyPrintStat, sortData } from './js/util';\nimport 'leaflet/dist/leaflet.css';\nimport numeral from 'numeral';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80756,\n    lng: -40.4796,\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [caseType, setCaseType] = useState('cases');\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  //runs code based on given condition\n  useEffect(() => {\n    // code will run ONLY once when the component runs\n    // if Variable is present, runs EVERYTIME when the component changes.\n    // asyc --> send a req, then handle response\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2, //abbreviations\n          }));\n          //to sort by number of cases >imported from util.js\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n          setMapCountries(data);\n        });\n    };\n    getCountriesData();\n  }, []);\n  // console.log(tableData);\n\n  const onCountryChange = async (event) => {\n    const selectedCountryCode = event.target.value;\n    // console.log(selectedCountryCode);\n\n    setCountry(selectedCountryCode);\n\n    const url =\n      selectedCountryCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${selectedCountryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(selectedCountryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n  console.log('country info: üíÅ üåê', countryInfo);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <img src={logo} className=\"app__logo\" alt=\"logo\" />\n\n        {/* header */}\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker 2020</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              {/* loopthrough list of countries to make a dropdown menu */}\n              <MenuItem value=\"worldwide\">World Wide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__infoBoxes\">\n          <InfoBox\n            isRed\n            active={caseType === 'cases'}\n            title=\"Infected\"\n            cases={numeral(countryInfo.todayCases).format('0,0')}\n            total={numeral(countryInfo.cases).format('0,0')}\n            onClick={(e) => setCaseType('cases')}\n          />\n          <InfoBox\n            active={caseType === 'recovered'}\n            title=\"Recovered\"\n            cases={numeral(countryInfo.todayRecovered).format('0,0')}\n            total={numeral(countryInfo.recovered).format('0,0')}\n            onClick={(e) => setCaseType('recovered')}\n          />\n          <InfoBox\n            isRed\n            active={caseType === 'deaths'}\n            title=\"Deaths\"\n            cases={numeral(countryInfo.todayDeaths).format('0,0')}\n            total={numeral(countryInfo.deaths).format('0,0')}\n            onClick={(e) => setCaseType('deaths')}\n          />\n        </div>\n\n        {/* map */}\n        <div className=\"app__map\">\n          <h2>Map of infected {caseType}</h2>\n          <Map\n            center={mapCenter}\n            zoom={mapZoom}\n            countries={mapCountries}\n            caseType={caseType}\n          />\n        </div>\n      </div>\n      <div className=\"app__right\">\n        <Card>\n          {/* table */}\n\n          <CardContent>\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h4>\n              World Wide Graph <br /> new {caseType}\n            </h4>\n            {/* graph */}\n            <LineGraph caseType={caseType} className=\"app__graph\" />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/InfoBox.js",["36"],"import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './InfoBox.css';\n\nexport default function InfoBox(props) {\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${props.active && 'infoBox--selected'} ${\n        props.isRed && 'infoBox--selectedIsRed'\n      }`}\n    >\n      <CardContent>\n        <h2 className=\"infoBox__title\">{props.title}</h2>\n        <h4> New cases: </h4>\n        <h2\n          className={`infoBox__cases ${!props.isRed && 'infoBox__case--green'}`}\n        >\n          {props.cases}\n        </h2>\n        <h4 className=\"infoBox__total\">Total: {props.total}</h4>\n      </CardContent>\n    </Card>\n  );\n}\n","/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/Map.js",[],"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/Table.js",[],"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/js/util.js",[],"/Users/sungjinkim/Desktop/portfolio/react-covid-tracker/src/components/LineGraph.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":10,"nodeType":"43","messageId":"44","endLine":17,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":2,"column":29,"nodeType":"43","messageId":"44","endLine":2,"endColumn":39},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'prettyPrintStat' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]